import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
import os

# Load training data from CSV
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
DATA_PATH = os.path.join(BASE_DIR, 'intents.csv')

data = pd.read_csv(DATA_PATH)

# Prepare data
X_train = data['text']
y_train = data['intent']

# Train model
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(X_train)
model = MultinomialNB()
model.fit(X, y_train)

# Responses (you can expand this)
RESPONSES = {
    "greet": "рж╣рзНржпрж╛рж▓рзЛ! ржХрзЗржоржи ржЖржЫрзЗржи?",
    "thanks": "ржЖржкржирж╛ржХрзЗржУ ржзржирзНржпржмрж╛ржж ЁЯШК",
    "ask_name": "ржЖржорж╛рж░ ржирж╛ржо ржмрж╛ржВрж▓рж╛ ржмржЯ ЁЯдЦ",
    "bye": "ржмрж┐ржжрж╛ржпрж╝! ржЖржмрж╛рж░ ржжрзЗржЦрж╛ рж╣ржмрзЗ ЁЯСЛ",
    "ask_activity": "ржЖржорж┐ ржПржЦржи рждрзЛржорж╛рж░ рж╕ржЩрзНржЧрзЗ ржХржерж╛ ржмрж▓ржЫрж┐ ЁЯЩВ",
}

def get_response(text):
    if not text.strip():
        return "ржХрж┐ржЫрзБ рж▓рж┐ржЦрзБржи ржжржпрж╝рж╛ ржХрж░рзЗ ЁЯЩВ"

    X_test = vectorizer.transform([text])
    intent = model.predict(X_test)[0]
    return RESPONSES.get(intent, "ржжрзБржГржЦрж┐ржд, ржЖржорж┐ рж╕рзЗржЯрж╛ ржмрзБржЭрждрзЗ ржкрж╛рж░рж┐ржирж┐ ЁЯШЕ")
